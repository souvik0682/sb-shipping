<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ERR00001" xml:space="preserve">
    <value>Username cannot be left blank</value>
  </data>
  <data name="ERR00002" xml:space="preserve">
    <value>Password cannot be left blank</value>
  </data>
  <data name="ERR00003" xml:space="preserve">
    <value>*Incorrect username or password</value>
  </data>
  <data name="ERR00004" xml:space="preserve">
    <value>*The database server was not found or was not accessible.</value>
  </data>
  <data name="ERR00005" xml:space="preserve">
    <value>Successfully Saved!</value>
  </data>
  <data name="ERR00006" xml:space="preserve">
    <value>Successfully Deleted!</value>
  </data>
  <data name="ERR00007" xml:space="preserve">
    <value>Click to delete this record</value>
  </data>
  <data name="ERR00008" xml:space="preserve">
    <value>Click to edit this record</value>
  </data>
  <data name="ERR00009" xml:space="preserve">
    <value>You do not have permission to perform this operation</value>
  </data>
  <data name="ERR00010" xml:space="preserve">
    <value>Are you sure you want to delete this record (Y/N)?</value>
  </data>
  <data name="ERR00011" xml:space="preserve">
    <value>Location name already exists. Please enter another name.</value>
  </data>
  <data name="ERR00012" xml:space="preserve">
    <value>Location Abbreviation already exists. Please enter another abbreviation.</value>
  </data>
  <data name="ERR00013" xml:space="preserve">
    <value>Area already exists. Please enter another name.</value>
  </data>
  <data name="ERR00014" xml:space="preserve">
    <value>Group Company name already exists. Please enter another name.</value>
  </data>
  <data name="ERR00015" xml:space="preserve">
    <value>User name already exists. Please enter another name.</value>
  </data>
  <data name="ERR00016" xml:space="preserve">
    <value>Type Area</value>
  </data>
  <data name="ERR00017" xml:space="preserve">
    <value>Type Abbreviation</value>
  </data>
  <data name="ERR00018" xml:space="preserve">
    <value>Type Location Name</value>
  </data>
  <data name="ERR00019" xml:space="preserve">
    <value>Type Username</value>
  </data>
  <data name="ERR00020" xml:space="preserve">
    <value>Type First Name</value>
  </data>
  <data name="ERR00021" xml:space="preserve">
    <value>Type Group Name</value>
  </data>
  <data name="ERR00022" xml:space="preserve">
    <value>Type Customer Name</value>
  </data>
  <data name="ERR00023" xml:space="preserve">
    <value>*Invalid EmailId</value>
  </data>
  <data name="ERR00024" xml:space="preserve">
    <value>*Group name cannot be left blank</value>
  </data>
  <data name="ERR00025" xml:space="preserve">
    <value>*Location cannot be left blank</value>
  </data>
  <data name="ERR00026" xml:space="preserve">
    <value>*Area name cannot be left blank</value>
  </data>
  <data name="ERR00027" xml:space="preserve">
    <value>*Customer Type cannot be left blank</value>
  </data>
  <data name="ERR00028" xml:space="preserve">
    <value>*Client Scope cannot be left blank</value>
  </data>
  <data name="ERR00029" xml:space="preserve">
    <value>*Customer name cannot be left blank</value>
  </data>
  <data name="ERR00030" xml:space="preserve">
    <value>*Address cannot be left blank</value>
  </data>
  <data name="ERR00031" xml:space="preserve">
    <value>*Phone no cannot be left blank</value>
  </data>
  <data name="ERR00032" xml:space="preserve">
    <value>*Contact Person name cannot be left blank</value>
  </data>
  <data name="ERR00033" xml:space="preserve">
    <value>*Designation cannot be left blank</value>
  </data>
  <data name="ERR00034" xml:space="preserve">
    <value>*Mobile number cannot be left blank</value>
  </data>
  <data name="ERR00035" xml:space="preserve">
    <value>*Abbreviation Cannot be Left Blank</value>
  </data>
  <data name="ERR00036" xml:space="preserve">
    <value>*Username cannot be left bhank</value>
  </data>
  <data name="ERR00037" xml:space="preserve">
    <value>*First name cannot be left bhank</value>
  </data>
  <data name="ERR00038" xml:space="preserve">
    <value>*Last name cannot be left bhank</value>
  </data>
  <data name="ERR00039" xml:space="preserve">
    <value>*Email Id cannot be left blank</value>
  </data>
  <data name="ERR00040" xml:space="preserve">
    <value>*Role cannot be left blank</value>
  </data>
  <data name="ERR00041" xml:space="preserve">
    <value>*Cannot open database requested by the login</value>
  </data>
  <data name="ERR00042" xml:space="preserve">
    <value>*Login failed for user</value>
  </data>
  <data name="ERR00043" xml:space="preserve">
    <value>* Unable to login. Please try again.</value>
  </data>
  <data name="ERR00044" xml:space="preserve">
    <value>*Sales Person Type cannot be left blank</value>
  </data>
  <data name="ERR00045" xml:space="preserve">
    <value>*Account of cannot be left blank</value>
  </data>
  <data name="ERR00046" xml:space="preserve">
    <value>Want to Quit?</value>
  </data>
  <data name="ERR00047" xml:space="preserve">
    <value>* Invalid Phone Number</value>
  </data>
  <data name="ERR00048" xml:space="preserve">
    <value>* Invalid Mobile Number</value>
  </data>
  <data name="ERR00049" xml:space="preserve">
    <value>* Pin Code cannot be left blank</value>
  </data>
  <data name="ERR00050" xml:space="preserve">
    <value>Are you sure you want to cancel?</value>
  </data>
  <data name="ERR00051" xml:space="preserve">
    <value>* Please select customer</value>
  </data>
  <data name="ERR00052" xml:space="preserve">
    <value>Please select a valid file to import</value>
  </data>
  <data name="ERR00053" xml:space="preserve">
    <value>The user cannot be deleted</value>
  </data>
  <data name="ERR00054" xml:space="preserve">
    <value>The group cannot be deleted</value>
  </data>
  <data name="ERR00055" xml:space="preserve">
    <value>Type Executive Name</value>
  </data>
  <data name="ERR00056" xml:space="preserve">
    <value>Customer Successfully Assigned</value>
  </data>
</root>